version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ai_chatbot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 50
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    # ports:
    #   - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 5s
      retries: 50
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-3000}:3000"  # Next.js frontend
    environment:
      - NODE_ENV=production
      - AUTH_SECRET=${AUTH_SECRET}
      - AUTH_REDIRECT_PROXY_URL=http://localhost:3000/api/auth
      - MAX_COMPLETION_TOKENS=${MAX_COMPLETION_TOKENS:-1000}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - USE_TOOLS=${USE_TOOLS:-false}
      # Database for chat history persistence
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/ai_chatbot
      # Redis for resumable streams
      - REDIS_URL=redis://redis:6379
      # Optional: Vercel Blob for file storage
      - BLOB_READ_WRITE_TOKEN=${BLOB_READ_WRITE_TOKEN:-}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    # restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["sh", "-c", "echo 'Waiting for database...' && sleep 5 && echo 'Running migrations...' && pnpm run db:migrate && echo 'Starting application...' && pnpm start"]

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge 